# CONNECTION DATABASE
spring.datasource.url=jdbc:mysql://localhost:3306/algafood?createDatabaseIfNotExist=true&serverTimezone=UTC
spring.datasource.username=root
spring.datasource.password=masterkey

# POOL CONNECTIONS DATABASE
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.idle-timeout=10000

# JPA CONFIGURATION
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# MIGRATIONS DATABASE
# spring.flyway.locations=classpath:db/migration,classpath:db/testdata

# EXPORT DDL
# spring.jpa.properties.javax.persistence.schema-generation.scripts.action=create
# spring.jpa.properties.javax.persistence.schema-generation.scripts.create-target=src/main/resources/ddl.sql

# ENABLES ERRORS IN DESERIALIZATION OF MISSING OR IGNORED PROPERTIES
spring.jackson.deserialization.fail-on-unknown-properties=true
spring.jackson.deserialization.fail-on-ignored-properties=true

# ENABLES ERRORS ON REQUESTS FOR NON-EXISTENT RESOURCES
spring.mvc.throw-exception-if-no-handler-found=true

# DISABLE MAPPINGS OF STATIC RESOURCES (IS NOT USABLE IN DEVELOPMENT OF APIs)
spring.resources.add-mappings=false

# SIZE GLOBAL APPLICATION FOR UPLOAD FILES
# spring.servlet.multipart.max-file-size=20KB

# STORAGE CONFIGURATION
algafood.storage.type=s3

# UPLOAD FILES LOCAL STORAGE
algafood.storage.local.directory=/Users/jonat/Desktop/catalogo

# UPLOAD FILES CLOUD AWS S3
# algafood.storage.s3.access-key=
# algafood.storage.s3.secret-key=
algafood.storage.s3.bucket=aw-devsoftsta-arquivos
algafood.storage.s3.region=us-east-1
algafood.storage.s3.directory-photos=catalogo

# SMTP CONFIGURATION MAIL SENDER WITH SENDGRID
spring.mail.host=smtp.sendgrid.net
spring.mail.port=587
spring.mail.username=apikey
# spring.mail.password=
algafood.email.from=Algafood <naoresponder@algafood.com.br>

# SEND EMAIL CONFIGURATION
algafood.email.impl=smtp

# EMAIL FOR TESTS WITH SANDBOX
algafood.email.sand-box.recipient=teste@algafood.com.br

# CONFIGURE LOCALE FOR FREEMARKER
spring.freemarker.settings.locale=pt_BR

# CONFIGURE COMPRESSION PAYLOAD
server.compression.enabled=true

# CONFIGURE LOGGLY
# logging.loggly.token=

# ATHENTICATE AND VALIDATION OF TOKEN IF USING OPAQUE TOKENS
# spring.security.oauth2.resourceserver.opaquetoken.introspection-uri=http://localhost:8095/oauth/check_token
# spring.security.oauth2.resourceserver.opaquetoken.client-id=checktoken
# spring.security.oauth2.resourceserver.opaquetoken.client-secret=checktoken

# ENABLE CONSOLE LOGGING DEBUG LEVEL
# logging.level.org.springframework=DEBUG

# IMPORT PUBLIC KEY FOR VALIDATION JWT
spring.security.oauth2.resourceserver.jwt.public-key-location=classpath:keys/algafood-pkey.pem

# JWT KEYSTORE CONFIGURATION
algafood.jwt.keystore.jks-location=classpath:keys/algafood.jks
algafood.jwt.keystore.password=123456
algafood.jwt.keystore.keypair-alias=algafood